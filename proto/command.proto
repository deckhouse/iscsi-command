syntax = "proto3";

package command;

option go_package = "iscsi-command/";

// gRPC service definition
service CommandExecutor {
    rpc Execute (CommandRequest) returns (CommandResponse);
    rpc Ping (PingRequest) returns (PingResponse); // Ping method for health checks
}

// Request message for executing iscsi-ls
message CommandRequest {
    string command = 1;         // The command to execute (must be "iscsi-ls")
    string portal = 2;          // The iSCSI portal (e.g., IP or hostname)
    string initiatorName = 3;   // The iSCSI initiator name
    string targetIQN = 4;       // The target IQN to query
    string authLogin = 5;       // Optional authentication username
    string authPassword = 6;    // Optional authentication password
}

// Response message containing command output and discovered LUNs
message CommandResponse {
    string output = 1;          // Raw command output (for debugging)
    string error = 2;           // Error message, if any
    repeated LUNInfo luns = 3;  // List of discovered LUNs
}

// Represents a single iSCSI LUN
message LUNInfo {
    uint32 lun = 1;             // Logical Unit Number (LUN)
    string wwid = 2;            // World Wide Name (identifier)
    uint64 size = 3;            // Size of the LUN in bytes
    string errors = 4;          // Error message related to the LUN, if any
}

// Request message for Ping
message PingRequest {}

// Response message for Ping
message PingResponse {
    string status = 1; // Status message (e.g., "Service is running")
}
